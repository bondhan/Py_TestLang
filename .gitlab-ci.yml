stages:
  - build
  - test
  - release
  - deploy
  - cleanup

variables:
  DB_USER: "tx-python"
  DB_PASS: "tUlJ3475"
  DB_HOST: "192.168.48.20"
  DB_NAME: "pylang_db"
  SERVICE_NAME: "dev_python"

build-docker:
  image: docker:git
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  after_script:
    - docker logout
  services:
    - docker:dind
  stage: build
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - env
  script:
    - docker build -t $CI_REGISTRY_IMAGE --no-cache .
    - docker push $CI_REGISTRY_IMAGE
    - docker rmi $CI_REGISTRY_IMAGE
  tags:
    - docker

db-dump:
  image: alpine
  stage: build
  script:
    - apk add --no-cache --no-progress -q mysql-client
    - mysql -u $DB_USER -h $DB_HOST -p$DB_PASS $DB_NAME < src/sql_db/01_schema_pylang.sql
    - mysql -u $DB_USER -h $DB_HOST -p$DB_PASS $DB_NAME < src/sql_db/pylangdb_dump.sql
  tags:
    - docker-texo
  when: manual

deploy-service:
  stage: deploy
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  after_script:
    - docker logout
  script:
    - docker service update --with-registry-auth --force --detach=false --image=$CI_REGISTRY_IMAGE $SERVICE_NAME
  tags:
    - docker-cli